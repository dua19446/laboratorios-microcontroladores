

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Apr 20 11:59:42 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  0200                     __pidataBANK0:
   216                           
   217                           ;initializer for _DISPLAY
   218  0200  343F               	retlw	63
   219  0201  3406               	retlw	6
   220  0202  345B               	retlw	91
   221  0203  344F               	retlw	79
   222  0204  3466               	retlw	102
   223  0205  346D               	retlw	109
   224  0206  347D               	retlw	125
   225  0207  3407               	retlw	7
   226  0208  347F               	retlw	127
   227  0209  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  0078                     __pnvCOMMON:
   231  0078                     _RESIDUO:
   232  0078                     	ds	1
   233  0079                     _CENTENA:
   234  0079                     	ds	1
   235                           
   236                           	psect	nvBANK0
   237  0035                     __pnvBANK0:
   238  0035                     _UNIDAD:
   239  0035                     	ds	1
   240  0036                     _DECENA:
   241  0036                     	ds	1
   242  0009                     _PORTE	set	9
   243  0005                     _PORTA	set	5
   244  0006                     _PORTB	set	6
   245  001E                     _ADRESH	set	30
   246  001F                     _ADCON0bits	set	31
   247  000C                     _PIR1bits	set	12
   248  0001                     _TMR0	set	1
   249  000B                     _INTCONbits	set	11
   250  0007                     _PORTC	set	7
   251  0009                     _PORTEbits	set	9
   252  005A                     _T0IF	set	90
   253  008C                     _PIE1bits	set	140
   254  009F                     _ADCON1bits	set	159
   255  0081                     _OPTION_REGbits	set	129
   256  008F                     _OSCCONbits	set	143
   257  0085                     _TRISAbits	set	133
   258  0089                     _TRISE	set	137
   259  0087                     _TRISC	set	135
   260  0086                     _TRISB	set	134
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           	psect	cinit
   265  0011                     start_initialization:	
   266                           ; #config settings
   267                           
   268  0011                     __initialization:
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  0011  1383               	bcf	3,7	;select IRP bank0
   272  0012  3035               	movlw	low (__pdataBANK0+10)
   273  0013  00FD               	movwf	btemp+-1
   274  0014  3002               	movlw	high __pidataBANK0
   275  0015  00FE               	movwf	btemp
   276  0016  3000               	movlw	low __pidataBANK0
   277  0017  00FF               	movwf	btemp+1
   278  0018  302B               	movlw	low __pdataBANK0
   279  0019  0084               	movwf	4
   280  001A  120A  118A  21E0  120A  118A  	fcall	init_ram0
   281                           
   282                           ; Clear objects allocated to COMMON
   283  001F  01F5               	clrf	__pbssCOMMON& (0+127)
   284  0020  01F6               	clrf	(__pbssCOMMON+1)& (0+127)
   285  0021  01F7               	clrf	(__pbssCOMMON+2)& (0+127)
   286  0022                     end_of_initialization:	
   287                           ;End of C runtime variable initialization code
   288                           
   289  0022                     __end_of__initialization:
   290  0022  0183               	clrf	3
   291  0023  120A  118A  29EF   	ljmp	_main	;jump to C main() function
   292                           
   293                           	psect	bssCOMMON
   294  0075                     __pbssCOMMON:
   295  0075                     _MULTIPLEXADO:
   296  0075                     	ds	2
   297  0077                     _GUARDADO:
   298  0077                     	ds	1
   299                           
   300                           	psect	dataBANK0
   301  002B                     __pdataBANK0:
   302  002B                     _DISPLAY:
   303  002B                     	ds	10
   304                           
   305                           	psect	inittext
   306  01DC                     init_fetch0:	
   307                           ;	Called with low address in FSR and high address in W
   308                           
   309  01DC  087E               	movf	btemp,w
   310  01DD  008A               	movwf	10
   311  01DE  087F               	movf	btemp+1,w
   312  01DF  0082               	movwf	2
   313  01E0                     init_ram0:	
   314                           ;Called with:
   315                           ;	high address of idata address in btemp 
   316                           ;	low address of idata address in btemp+1 
   317                           ;	low address of data in FSR
   318                           ;	high address + 1 of data in btemp-1
   319                           
   320  01E0  120A  118A  21DC  120A  118A  	fcall	init_fetch0
   321  01E5  0080               	movwf	0
   322  01E6  0A84               	incf	4,f
   323  01E7  0804               	movf	4,w
   324  01E8  067D               	xorwf	btemp+-1,w
   325  01E9  1903               	btfsc	3,2
   326  01EA  3400               	retlw	0
   327  01EB  0AFF               	incf	btemp+1,f
   328  01EC  1903               	btfsc	3,2
   329  01ED  0AFE               	incf	btemp,f
   330  01EE  29E0               	goto	init_ram0
   331                           
   332                           	psect	cstackCOMMON
   333  0070                     __pcstackCOMMON:
   334  0070                     ?_setup:
   335  0070                     ?_division:	
   336                           ; 1 bytes @ 0x0
   337                           
   338  0070                     ?_isr:	
   339                           ; 1 bytes @ 0x0
   340                           
   341  0070                     ??_isr:	
   342                           ; 1 bytes @ 0x0
   343                           
   344  0070                     ?_main:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349  0070                     	ds	4
   350  0074                     ??_setup:
   351  0074                     ??___awdiv:	
   352                           ; 1 bytes @ 0x4
   353                           
   354  0074                     ??___awmod:	
   355                           ; 1 bytes @ 0x4
   356                           
   357                           
   358                           ; 1 bytes @ 0x4
   359  0074                     	ds	1
   360  0075                     ??_main:
   361                           
   362                           	psect	cstackBANK0
   363  0020                     __pcstackBANK0:	
   364                           ; 1 bytes @ 0x5
   365                           
   366  0020                     ?___awdiv:
   367  0020                     ?___awmod:	
   368                           ; 2 bytes @ 0x0
   369                           
   370  0020                     ___awdiv@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373  0020                     ___awmod@divisor:	
   374                           ; 2 bytes @ 0x0
   375                           
   376                           
   377                           ; 2 bytes @ 0x0
   378  0020                     	ds	2
   379  0022                     ___awdiv@dividend:
   380  0022                     ___awmod@dividend:	
   381                           ; 2 bytes @ 0x2
   382                           
   383                           
   384                           ; 2 bytes @ 0x2
   385  0022                     	ds	2
   386  0024                     ___awdiv@counter:
   387  0024                     ___awmod@counter:	
   388                           ; 1 bytes @ 0x4
   389                           
   390                           
   391                           ; 1 bytes @ 0x4
   392  0024                     	ds	1
   393  0025                     ___awdiv@sign:
   394  0025                     ___awmod@sign:	
   395                           ; 1 bytes @ 0x5
   396                           
   397                           
   398                           ; 1 bytes @ 0x5
   399  0025                     	ds	1
   400  0026                     ___awdiv@quotient:
   401                           
   402                           ; 2 bytes @ 0x6
   403  0026                     	ds	2
   404  0028                     ??_division:
   405                           
   406                           ; 1 bytes @ 0x8
   407  0028                     	ds	3
   408                           
   409                           	psect	maintext
   410  01EF                     __pmaintext:	
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 113 in file "lab8.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;		None
   421 ;; Return value:  Size  Location     Type
   422 ;;                  1    wreg      void 
   423 ;; Registers used:
   424 ;;		wreg, status,2, status,0, pclath, cstack
   425 ;; Tracked objects:
   426 ;;		On entry : B00/0
   427 ;;		On exit  : 0/0
   428 ;;		Unchanged: 0/0
   429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   430 ;;      Params:         0       0       0       0       0
   431 ;;      Locals:         0       0       0       0       0
   432 ;;      Temps:          0       0       0       0       0
   433 ;;      Totals:         0       0       0       0       0
   434 ;;Total ram usage:        0 bytes
   435 ;; Hardware stack levels required when called:    3
   436 ;; This function calls:
   437 ;;		_division
   438 ;;		_setup
   439 ;; This function is called by:
   440 ;;		Startup code after reset
   441 ;; This function uses a non-reentrant model
   442 ;;
   443                           
   444                           
   445                           ;psect for function _main
   446  01EF                     _main:
   447  01EF                     l1093:	
   448                           ;incstack = 0
   449                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   450                           
   451                           
   452                           ;lab8.c: 114: 
   453  01EF  120A  118A  21A8  120A  118A  	fcall	_setup
   454  01F4                     l1095:
   455                           
   456                           ;lab8.c: 117:     ADCON0bits.ADCS1 = 1;;lab8.c: 118:     ADCON0bits.ADCS0 = 1;
   457  01F4  1283               	bcf	3,5	;RP0=0, select bank0
   458  01F5  1303               	bcf	3,6	;RP1=0, select bank0
   459  01F6  149F               	bsf	31,1	;volatile
   460                           
   461                           ;lab8.c: 119: 
   462  01F7  120A  118A  20F2  120A  118A  	fcall	_division
   463  01FC  29F4               	goto	l1095
   464  01FD  120A  118A  280E   	ljmp	start
   465  0200                     __end_of_main:
   466                           
   467                           	psect	text1
   468  01A8                     __ptext1:	
   469 ;; *************** function _setup *****************
   470 ;; Defined at:
   471 ;;		line 125 in file "lab8.c"
   472 ;; Parameters:    Size  Location     Type
   473 ;;		None
   474 ;; Auto vars:     Size  Location     Type
   475 ;;		None
   476 ;; Return value:  Size  Location     Type
   477 ;;                  1    wreg      void 
   478 ;; Registers used:
   479 ;;		wreg, status,2, status,0
   480 ;; Tracked objects:
   481 ;;		On entry : 0/0
   482 ;;		On exit  : 0/0
   483 ;;		Unchanged: 0/0
   484 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   485 ;;      Params:         0       0       0       0       0
   486 ;;      Locals:         0       0       0       0       0
   487 ;;      Temps:          0       0       0       0       0
   488 ;;      Totals:         0       0       0       0       0
   489 ;;Total ram usage:        0 bytes
   490 ;; Hardware stack levels used:    1
   491 ;; Hardware stack levels required when called:    1
   492 ;; This function calls:
   493 ;;		Nothing
   494 ;; This function is called by:
   495 ;;		_main
   496 ;; This function uses a non-reentrant model
   497 ;;
   498                           
   499                           
   500                           ;psect for function _setup
   501  01A8                     _setup:
   502  01A8                     l761:	
   503                           ;incstack = 0
   504                           ; Regs used in _setup: [wreg+status,2+status,0]
   505                           
   506                           
   507                           ;lab8.c: 127:     INTCONbits.GIE = 1;
   508  01A8  3003               	movlw	3
   509  01A9  1683               	bsf	3,5	;RP0=1, select bank3
   510  01AA  1703               	bsf	3,6	;RP1=1, select bank3
   511  01AB  0088               	movwf	8	;volatile
   512  01AC                     l763:
   513                           
   514                           ;lab8.c: 128:     PIR1bits.ADIF = 0;
   515  01AC  0189               	clrf	9	;volatile
   516  01AD                     l765:
   517                           
   518                           ;lab8.c: 130:     INTCONbits.PEIE = 1;
   519  01AD  1683               	bsf	3,5	;RP0=1, select bank1
   520  01AE  1303               	bcf	3,6	;RP1=0, select bank1
   521  01AF  0186               	clrf	6	;volatile
   522  01B0                     l767:
   523                           
   524                           ;lab8.c: 131:     INTCONbits.T0IE = 1;
   525  01B0  0187               	clrf	7	;volatile
   526  01B1                     l769:
   527                           
   528                           ;lab8.c: 132:     INTCONbits.T0IF = 0;
   529  01B1  0189               	clrf	9	;volatile
   530  01B2                     l771:
   531                           
   532                           ;lab8.c: 133: 
   533  01B2  1405               	bsf	5,0	;volatile
   534  01B3                     l773:
   535                           
   536                           ;lab8.c: 134: }
   537  01B3  1485               	bsf	5,1	;volatile
   538  01B4                     l775:
   539                           
   540                           ;lab8.c: 136:     CENTENA = GUARDADO/100;
   541  01B4  1283               	bcf	3,5	;RP0=0, select bank0
   542  01B5  1303               	bcf	3,6	;RP1=0, select bank0
   543  01B6  0185               	clrf	5	;volatile
   544  01B7                     l777:
   545                           
   546                           ;lab8.c: 137: 
   547  01B7  0187               	clrf	7	;volatile
   548  01B8                     l779:
   549                           
   550                           ;lab8.c: 138:     RESIDUO = GUARDADO%100;
   551  01B8  0186               	clrf	6	;volatile
   552  01B9                     l781:
   553                           
   554                           ;lab8.c: 139:     DECENA = RESIDUO/10;
   555  01B9  0189               	clrf	9	;volatile
   556  01BA                     l783:
   557  01BA  1683               	bsf	3,5	;RP0=1, select bank1
   558  01BB  1303               	bcf	3,6	;RP1=0, select bank1
   559  01BC  130F               	bcf	15,6	;volatile
   560  01BD                     l785:
   561  01BD  168F               	bsf	15,5	;volatile
   562  01BE                     l787:
   563  01BE  120F               	bcf	15,4	;volatile
   564  01BF                     l789:
   565  01BF  140F               	bsf	15,0	;volatile
   566  01C0                     l791:
   567  01C0  1281               	bcf	1,5	;volatile
   568  01C1                     l793:
   569  01C1  1181               	bcf	1,3	;volatile
   570  01C2                     l795:
   571  01C2  1501               	bsf	1,2	;volatile
   572  01C3                     l797:
   573  01C3  1481               	bsf	1,1	;volatile
   574  01C4                     l799:
   575  01C4  1401               	bsf	1,0	;volatile
   576  01C5                     l801:
   577  01C5  30C3               	movlw	-61
   578  01C6  1283               	bcf	3,5	;RP0=0, select bank0
   579  01C7  1303               	bcf	3,6	;RP1=0, select bank0
   580  01C8  059F               	andwf	31,f	;volatile
   581  01C9                     l803:
   582  01C9  179F               	bsf	31,7	;volatile
   583  01CA                     l805:
   584  01CA  171F               	bsf	31,6	;volatile
   585  01CB                     l807:
   586  01CB  141F               	bsf	31,0	;volatile
   587  01CC                     l809:
   588  01CC  1683               	bsf	3,5	;RP0=1, select bank1
   589  01CD  1303               	bcf	3,6	;RP1=0, select bank1
   590  01CE  139F               	bcf	31,7	;volatile
   591  01CF                     l811:
   592  01CF  121F               	bcf	31,4	;volatile
   593  01D0                     l813:
   594  01D0  129F               	bcf	31,5	;volatile
   595  01D1                     l815:
   596  01D1  178B               	bsf	11,7	;volatile
   597  01D2                     l817:
   598  01D2  1283               	bcf	3,5	;RP0=0, select bank0
   599  01D3  1303               	bcf	3,6	;RP1=0, select bank0
   600  01D4  130C               	bcf	12,6	;volatile
   601  01D5                     l819:
   602  01D5  1683               	bsf	3,5	;RP0=1, select bank1
   603  01D6  1303               	bcf	3,6	;RP1=0, select bank1
   604  01D7  170C               	bsf	12,6	;volatile
   605  01D8                     l821:
   606  01D8  170B               	bsf	11,6	;volatile
   607  01D9                     l823:
   608  01D9  168B               	bsf	11,5	;volatile
   609  01DA                     l825:
   610  01DA  110B               	bcf	11,2	;volatile
   611  01DB                     l84:
   612  01DB  0008               	return
   613  01DC                     __end_of_setup:
   614                           
   615                           	psect	text2
   616  00F2                     __ptext2:	
   617 ;; *************** function _division *****************
   618 ;; Defined at:
   619 ;;		line 176 in file "lab8.c"
   620 ;; Parameters:    Size  Location     Type
   621 ;;		None
   622 ;; Auto vars:     Size  Location     Type
   623 ;;		None
   624 ;; Return value:  Size  Location     Type
   625 ;;                  1    wreg      void 
   626 ;; Registers used:
   627 ;;		wreg, status,2, status,0, pclath, cstack
   628 ;; Tracked objects:
   629 ;;		On entry : 0/0
   630 ;;		On exit  : 0/0
   631 ;;		Unchanged: 0/0
   632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   633 ;;      Params:         0       0       0       0       0
   634 ;;      Locals:         0       0       0       0       0
   635 ;;      Temps:          0       3       0       0       0
   636 ;;      Totals:         0       3       0       0       0
   637 ;;Total ram usage:        3 bytes
   638 ;; Hardware stack levels used:    1
   639 ;; Hardware stack levels required when called:    2
   640 ;; This function calls:
   641 ;;		___awdiv
   642 ;;		___awmod
   643 ;; This function is called by:
   644 ;;		_main
   645 ;; This function uses a non-reentrant model
   646 ;;
   647                           
   648                           
   649                           ;psect for function _division
   650  00F2                     _division:
   651  00F2                     l1091:	
   652                           ;incstack = 0
   653                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   654                           
   655  00F2  3064               	movlw	100
   656  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   657  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   658  00F5  00A0               	movwf	___awdiv@divisor
   659  00F6  3000               	movlw	0
   660  00F7  00A1               	movwf	___awdiv@divisor+1
   661  00F8  0877               	movf	_GUARDADO,w
   662  00F9  00A8               	movwf	??_division
   663  00FA  01A9               	clrf	??_division+1
   664  00FB  0828               	movf	??_division,w
   665  00FC  00A2               	movwf	___awdiv@dividend
   666  00FD  0829               	movf	??_division+1,w
   667  00FE  00A3               	movwf	___awdiv@dividend+1
   668  00FF  120A  118A  2026  120A  118A  	fcall	___awdiv
   669  0104  1283               	bcf	3,5	;RP0=0, select bank0
   670  0105  1303               	bcf	3,6	;RP1=0, select bank0
   671  0106  0820               	movf	?___awdiv,w
   672  0107  00AA               	movwf	??_division+2
   673  0108  082A               	movf	??_division+2,w
   674  0109  00F9               	movwf	_CENTENA
   675  010A  3064               	movlw	100
   676  010B  00A0               	movwf	___awmod@divisor
   677  010C  3000               	movlw	0
   678  010D  00A1               	movwf	___awmod@divisor+1
   679  010E  0877               	movf	_GUARDADO,w
   680  010F  00A8               	movwf	??_division
   681  0110  01A9               	clrf	??_division+1
   682  0111  0828               	movf	??_division,w
   683  0112  00A2               	movwf	___awmod@dividend
   684  0113  0829               	movf	??_division+1,w
   685  0114  00A3               	movwf	___awmod@dividend+1
   686  0115  120A  118A  214D  120A  118A  	fcall	___awmod
   687  011A  1283               	bcf	3,5	;RP0=0, select bank0
   688  011B  1303               	bcf	3,6	;RP1=0, select bank0
   689  011C  0820               	movf	?___awmod,w
   690  011D  00AA               	movwf	??_division+2
   691  011E  082A               	movf	??_division+2,w
   692  011F  00F8               	movwf	_RESIDUO
   693  0120  300A               	movlw	10
   694  0121  00A0               	movwf	___awdiv@divisor
   695  0122  3000               	movlw	0
   696  0123  00A1               	movwf	___awdiv@divisor+1
   697  0124  0878               	movf	_RESIDUO,w
   698  0125  00A8               	movwf	??_division
   699  0126  01A9               	clrf	??_division+1
   700  0127  0828               	movf	??_division,w
   701  0128  00A2               	movwf	___awdiv@dividend
   702  0129  0829               	movf	??_division+1,w
   703  012A  00A3               	movwf	___awdiv@dividend+1
   704  012B  120A  118A  2026  120A  118A  	fcall	___awdiv
   705  0130  1283               	bcf	3,5	;RP0=0, select bank0
   706  0131  1303               	bcf	3,6	;RP1=0, select bank0
   707  0132  0820               	movf	?___awdiv,w
   708  0133  00AA               	movwf	??_division+2
   709  0134  082A               	movf	??_division+2,w
   710  0135  00B6               	movwf	_DECENA
   711  0136  300A               	movlw	10
   712  0137  00A0               	movwf	___awmod@divisor
   713  0138  3000               	movlw	0
   714  0139  00A1               	movwf	___awmod@divisor+1
   715  013A  0878               	movf	_RESIDUO,w
   716  013B  00A8               	movwf	??_division
   717  013C  01A9               	clrf	??_division+1
   718  013D  0828               	movf	??_division,w
   719  013E  00A2               	movwf	___awmod@dividend
   720  013F  0829               	movf	??_division+1,w
   721  0140  00A3               	movwf	___awmod@dividend+1
   722  0141  120A  118A  214D  120A  118A  	fcall	___awmod
   723  0146  1283               	bcf	3,5	;RP0=0, select bank0
   724  0147  1303               	bcf	3,6	;RP1=0, select bank0
   725  0148  0820               	movf	?___awmod,w
   726  0149  00AA               	movwf	??_division+2
   727  014A  082A               	movf	??_division+2,w
   728  014B  00B5               	movwf	_UNIDAD
   729  014C                     l87:
   730  014C  0008               	return
   731  014D                     __end_of_division:
   732                           
   733                           	psect	text3
   734  014D                     __ptext3:	
   735 ;; *************** function ___awmod *****************
   736 ;; Defined at:
   737 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;  divisor         2    0[BANK0 ] int 
   740 ;;  dividend        2    2[BANK0 ] int 
   741 ;; Auto vars:     Size  Location     Type
   742 ;;  sign            1    5[BANK0 ] unsigned char 
   743 ;;  counter         1    4[BANK0 ] unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  2    0[BANK0 ] int 
   746 ;; Registers used:
   747 ;;		wreg, status,2, status,0
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       4       0       0       0
   754 ;;      Locals:         0       2       0       0       0
   755 ;;      Temps:          1       0       0       0       0
   756 ;;      Totals:         1       6       0       0       0
   757 ;;Total ram usage:        7 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; Hardware stack levels required when called:    1
   760 ;; This function calls:
   761 ;;		Nothing
   762 ;; This function is called by:
   763 ;;		_division
   764 ;; This function uses a non-reentrant model
   765 ;;
   766                           
   767                           
   768                           ;psect for function ___awmod
   769  014D                     ___awmod:
   770  014D                     l1053:	
   771                           ;incstack = 0
   772                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   773                           
   774  014D  1283               	bcf	3,5	;RP0=0, select bank0
   775  014E  1303               	bcf	3,6	;RP1=0, select bank0
   776  014F  01A5               	clrf	___awmod@sign
   777  0150                     l1055:
   778  0150  1FA3               	btfss	___awmod@dividend+1,7
   779  0151  2953               	goto	u591
   780  0152  2954               	goto	u590
   781  0153                     u591:
   782  0153  295B               	goto	l1061
   783  0154                     u590:
   784  0154                     l1057:
   785  0154  09A2               	comf	___awmod@dividend,f
   786  0155  09A3               	comf	___awmod@dividend+1,f
   787  0156  0AA2               	incf	___awmod@dividend,f
   788  0157  1903               	skipnz
   789  0158  0AA3               	incf	___awmod@dividend+1,f
   790  0159                     l1059:
   791  0159  01A5               	clrf	___awmod@sign
   792  015A  0AA5               	incf	___awmod@sign,f
   793  015B                     l1061:
   794  015B  1FA1               	btfss	___awmod@divisor+1,7
   795  015C  295E               	goto	u601
   796  015D  295F               	goto	u600
   797  015E                     u601:
   798  015E  2964               	goto	l1065
   799  015F                     u600:
   800  015F                     l1063:
   801  015F  09A0               	comf	___awmod@divisor,f
   802  0160  09A1               	comf	___awmod@divisor+1,f
   803  0161  0AA0               	incf	___awmod@divisor,f
   804  0162  1903               	skipnz
   805  0163  0AA1               	incf	___awmod@divisor+1,f
   806  0164                     l1065:
   807  0164  0820               	movf	___awmod@divisor,w
   808  0165  0421               	iorwf	___awmod@divisor+1,w
   809  0166  1903               	btfsc	3,2
   810  0167  2969               	goto	u611
   811  0168  296A               	goto	u610
   812  0169                     u611:
   813  0169  2999               	goto	l1083
   814  016A                     u610:
   815  016A                     l1067:
   816  016A  01A4               	clrf	___awmod@counter
   817  016B  0AA4               	incf	___awmod@counter,f
   818  016C  2978               	goto	l1073
   819  016D                     l1069:
   820  016D  3001               	movlw	1
   821  016E                     u625:
   822  016E  1003               	clrc
   823  016F  0DA0               	rlf	___awmod@divisor,f
   824  0170  0DA1               	rlf	___awmod@divisor+1,f
   825  0171  3EFF               	addlw	-1
   826  0172  1D03               	skipz
   827  0173  296E               	goto	u625
   828  0174                     l1071:
   829  0174  3001               	movlw	1
   830  0175  00F4               	movwf	??___awmod
   831  0176  0874               	movf	??___awmod,w
   832  0177  07A4               	addwf	___awmod@counter,f
   833  0178                     l1073:
   834  0178  1FA1               	btfss	___awmod@divisor+1,7
   835  0179  297B               	goto	u631
   836  017A  297C               	goto	u630
   837  017B                     u631:
   838  017B  296D               	goto	l1069
   839  017C                     u630:
   840  017C                     l1075:
   841  017C  0821               	movf	___awmod@divisor+1,w
   842  017D  0223               	subwf	___awmod@dividend+1,w
   843  017E  1D03               	skipz
   844  017F  2982               	goto	u645
   845  0180  0820               	movf	___awmod@divisor,w
   846  0181  0222               	subwf	___awmod@dividend,w
   847  0182                     u645:
   848  0182  1C03               	skipc
   849  0183  2985               	goto	u641
   850  0184  2986               	goto	u640
   851  0185                     u641:
   852  0185  298C               	goto	l1079
   853  0186                     u640:
   854  0186                     l1077:
   855  0186  0820               	movf	___awmod@divisor,w
   856  0187  02A2               	subwf	___awmod@dividend,f
   857  0188  0821               	movf	___awmod@divisor+1,w
   858  0189  1C03               	skipc
   859  018A  03A3               	decf	___awmod@dividend+1,f
   860  018B  02A3               	subwf	___awmod@dividend+1,f
   861  018C                     l1079:
   862  018C  3001               	movlw	1
   863  018D                     u655:
   864  018D  1003               	clrc
   865  018E  0CA1               	rrf	___awmod@divisor+1,f
   866  018F  0CA0               	rrf	___awmod@divisor,f
   867  0190  3EFF               	addlw	-1
   868  0191  1D03               	skipz
   869  0192  298D               	goto	u655
   870  0193                     l1081:
   871  0193  3001               	movlw	1
   872  0194  02A4               	subwf	___awmod@counter,f
   873  0195  1D03               	btfss	3,2
   874  0196  2998               	goto	u661
   875  0197  2999               	goto	u660
   876  0198                     u661:
   877  0198  297C               	goto	l1075
   878  0199                     u660:
   879  0199                     l1083:
   880  0199  0825               	movf	___awmod@sign,w
   881  019A  1903               	btfsc	3,2
   882  019B  299D               	goto	u671
   883  019C  299E               	goto	u670
   884  019D                     u671:
   885  019D  29A3               	goto	l1087
   886  019E                     u670:
   887  019E                     l1085:
   888  019E  09A2               	comf	___awmod@dividend,f
   889  019F  09A3               	comf	___awmod@dividend+1,f
   890  01A0  0AA2               	incf	___awmod@dividend,f
   891  01A1  1903               	skipnz
   892  01A2  0AA3               	incf	___awmod@dividend+1,f
   893  01A3                     l1087:
   894  01A3  0823               	movf	___awmod@dividend+1,w
   895  01A4  00A1               	movwf	?___awmod+1
   896  01A5  0822               	movf	___awmod@dividend,w
   897  01A6  00A0               	movwf	?___awmod
   898  01A7                     l339:
   899  01A7  0008               	return
   900  01A8                     __end_of___awmod:
   901                           
   902                           	psect	text4
   903  0026                     __ptext4:	
   904 ;; *************** function ___awdiv *****************
   905 ;; Defined at:
   906 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;  divisor         2    0[BANK0 ] int 
   909 ;;  dividend        2    2[BANK0 ] int 
   910 ;; Auto vars:     Size  Location     Type
   911 ;;  quotient        2    6[BANK0 ] int 
   912 ;;  sign            1    5[BANK0 ] unsigned char 
   913 ;;  counter         1    4[BANK0 ] unsigned char 
   914 ;; Return value:  Size  Location     Type
   915 ;;                  2    0[BANK0 ] int 
   916 ;; Registers used:
   917 ;;		wreg, status,2, status,0
   918 ;; Tracked objects:
   919 ;;		On entry : 0/0
   920 ;;		On exit  : 0/0
   921 ;;		Unchanged: 0/0
   922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   923 ;;      Params:         0       4       0       0       0
   924 ;;      Locals:         0       4       0       0       0
   925 ;;      Temps:          1       0       0       0       0
   926 ;;      Totals:         1       8       0       0       0
   927 ;;Total ram usage:        9 bytes
   928 ;; Hardware stack levels used:    1
   929 ;; Hardware stack levels required when called:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_division
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           
   937                           
   938                           ;psect for function ___awdiv
   939  0026                     ___awdiv:
   940  0026                     l1009:	
   941                           ;incstack = 0
   942                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   943                           
   944  0026  1283               	bcf	3,5	;RP0=0, select bank0
   945  0027  1303               	bcf	3,6	;RP1=0, select bank0
   946  0028  01A5               	clrf	___awdiv@sign
   947  0029                     l1011:
   948  0029  1FA1               	btfss	___awdiv@divisor+1,7
   949  002A  282C               	goto	u491
   950  002B  282D               	goto	u490
   951  002C                     u491:
   952  002C  2834               	goto	l1017
   953  002D                     u490:
   954  002D                     l1013:
   955  002D  09A0               	comf	___awdiv@divisor,f
   956  002E  09A1               	comf	___awdiv@divisor+1,f
   957  002F  0AA0               	incf	___awdiv@divisor,f
   958  0030  1903               	skipnz
   959  0031  0AA1               	incf	___awdiv@divisor+1,f
   960  0032                     l1015:
   961  0032  01A5               	clrf	___awdiv@sign
   962  0033  0AA5               	incf	___awdiv@sign,f
   963  0034                     l1017:
   964  0034  1FA3               	btfss	___awdiv@dividend+1,7
   965  0035  2837               	goto	u501
   966  0036  2838               	goto	u500
   967  0037                     u501:
   968  0037  2841               	goto	l1023
   969  0038                     u500:
   970  0038                     l1019:
   971  0038  09A2               	comf	___awdiv@dividend,f
   972  0039  09A3               	comf	___awdiv@dividend+1,f
   973  003A  0AA2               	incf	___awdiv@dividend,f
   974  003B  1903               	skipnz
   975  003C  0AA3               	incf	___awdiv@dividend+1,f
   976  003D                     l1021:
   977  003D  3001               	movlw	1
   978  003E  00F4               	movwf	??___awdiv
   979  003F  0874               	movf	??___awdiv,w
   980  0040  06A5               	xorwf	___awdiv@sign,f
   981  0041                     l1023:
   982  0041  01A6               	clrf	___awdiv@quotient
   983  0042  01A7               	clrf	___awdiv@quotient+1
   984  0043                     l1025:
   985  0043  0820               	movf	___awdiv@divisor,w
   986  0044  0421               	iorwf	___awdiv@divisor+1,w
   987  0045  1903               	btfsc	3,2
   988  0046  2848               	goto	u511
   989  0047  2849               	goto	u510
   990  0048                     u511:
   991  0048  2880               	goto	l1045
   992  0049                     u510:
   993  0049                     l1027:
   994  0049  01A4               	clrf	___awdiv@counter
   995  004A  0AA4               	incf	___awdiv@counter,f
   996  004B  2857               	goto	l1033
   997  004C                     l1029:
   998  004C  3001               	movlw	1
   999  004D                     u525:
  1000  004D  1003               	clrc
  1001  004E  0DA0               	rlf	___awdiv@divisor,f
  1002  004F  0DA1               	rlf	___awdiv@divisor+1,f
  1003  0050  3EFF               	addlw	-1
  1004  0051  1D03               	skipz
  1005  0052  284D               	goto	u525
  1006  0053                     l1031:
  1007  0053  3001               	movlw	1
  1008  0054  00F4               	movwf	??___awdiv
  1009  0055  0874               	movf	??___awdiv,w
  1010  0056  07A4               	addwf	___awdiv@counter,f
  1011  0057                     l1033:
  1012  0057  1FA1               	btfss	___awdiv@divisor+1,7
  1013  0058  285A               	goto	u531
  1014  0059  285B               	goto	u530
  1015  005A                     u531:
  1016  005A  284C               	goto	l1029
  1017  005B                     u530:
  1018  005B                     l1035:
  1019  005B  3001               	movlw	1
  1020  005C                     u545:
  1021  005C  1003               	clrc
  1022  005D  0DA6               	rlf	___awdiv@quotient,f
  1023  005E  0DA7               	rlf	___awdiv@quotient+1,f
  1024  005F  3EFF               	addlw	-1
  1025  0060  1D03               	skipz
  1026  0061  285C               	goto	u545
  1027  0062  0821               	movf	___awdiv@divisor+1,w
  1028  0063  0223               	subwf	___awdiv@dividend+1,w
  1029  0064  1D03               	skipz
  1030  0065  2868               	goto	u555
  1031  0066  0820               	movf	___awdiv@divisor,w
  1032  0067  0222               	subwf	___awdiv@dividend,w
  1033  0068                     u555:
  1034  0068  1C03               	skipc
  1035  0069  286B               	goto	u551
  1036  006A  286C               	goto	u550
  1037  006B                     u551:
  1038  006B  2873               	goto	l1041
  1039  006C                     u550:
  1040  006C                     l1037:
  1041  006C  0820               	movf	___awdiv@divisor,w
  1042  006D  02A2               	subwf	___awdiv@dividend,f
  1043  006E  0821               	movf	___awdiv@divisor+1,w
  1044  006F  1C03               	skipc
  1045  0070  03A3               	decf	___awdiv@dividend+1,f
  1046  0071  02A3               	subwf	___awdiv@dividend+1,f
  1047  0072                     l1039:
  1048  0072  1426               	bsf	___awdiv@quotient,0
  1049  0073                     l1041:
  1050  0073  3001               	movlw	1
  1051  0074                     u565:
  1052  0074  1003               	clrc
  1053  0075  0CA1               	rrf	___awdiv@divisor+1,f
  1054  0076  0CA0               	rrf	___awdiv@divisor,f
  1055  0077  3EFF               	addlw	-1
  1056  0078  1D03               	skipz
  1057  0079  2874               	goto	u565
  1058  007A                     l1043:
  1059  007A  3001               	movlw	1
  1060  007B  02A4               	subwf	___awdiv@counter,f
  1061  007C  1D03               	btfss	3,2
  1062  007D  287F               	goto	u571
  1063  007E  2880               	goto	u570
  1064  007F                     u571:
  1065  007F  285B               	goto	l1035
  1066  0080                     u570:
  1067  0080                     l1045:
  1068  0080  0825               	movf	___awdiv@sign,w
  1069  0081  1903               	btfsc	3,2
  1070  0082  2884               	goto	u581
  1071  0083  2885               	goto	u580
  1072  0084                     u581:
  1073  0084  288A               	goto	l1049
  1074  0085                     u580:
  1075  0085                     l1047:
  1076  0085  09A6               	comf	___awdiv@quotient,f
  1077  0086  09A7               	comf	___awdiv@quotient+1,f
  1078  0087  0AA6               	incf	___awdiv@quotient,f
  1079  0088  1903               	skipnz
  1080  0089  0AA7               	incf	___awdiv@quotient+1,f
  1081  008A                     l1049:
  1082  008A  0827               	movf	___awdiv@quotient+1,w
  1083  008B  00A1               	movwf	?___awdiv+1
  1084  008C  0826               	movf	___awdiv@quotient,w
  1085  008D  00A0               	movwf	?___awdiv
  1086  008E                     l326:
  1087  008E  0008               	return
  1088  008F                     __end_of___awdiv:
  1089                           
  1090                           	psect	text5
  1091  008F                     __ptext5:	
  1092 ;; *************** function _isr *****************
  1093 ;; Defined at:
  1094 ;;		line 67 in file "lab8.c"
  1095 ;; Parameters:    Size  Location     Type
  1096 ;;		None
  1097 ;; Auto vars:     Size  Location     Type
  1098 ;;		None
  1099 ;; Return value:  Size  Location     Type
  1100 ;;                  1    wreg      void 
  1101 ;; Registers used:
  1102 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1103 ;; Tracked objects:
  1104 ;;		On entry : 0/0
  1105 ;;		On exit  : 0/0
  1106 ;;		Unchanged: 0/0
  1107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1108 ;;      Params:         0       0       0       0       0
  1109 ;;      Locals:         0       0       0       0       0
  1110 ;;      Temps:          4       0       0       0       0
  1111 ;;      Totals:         4       0       0       0       0
  1112 ;;Total ram usage:        4 bytes
  1113 ;; Hardware stack levels used:    1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		Interrupt level 1
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _isr
  1123  008F                     _isr:
  1124  008F                     i1l961:
  1125                           
  1126                           ;lab8.c: 69: 
  1127  008F  1D0B               	btfss	11,2	;volatile
  1128  0090  2892               	goto	u44_21
  1129  0091  2893               	goto	u44_20
  1130  0092                     u44_21:
  1131  0092  28C5               	goto	i1l989
  1132  0093                     u44_20:
  1133  0093                     i1l963:
  1134                           
  1135                           ;lab8.c: 70: ;lab8.c: 71: 
  1136  0093  1283               	bcf	3,5	;RP0=0, select bank0
  1137  0094  1303               	bcf	3,6	;RP1=0, select bank0
  1138  0095  1109               	bcf	9,2	;volatile
  1139                           
  1140                           ;lab8.c: 72: void main(void) {
  1141  0096  1409               	bsf	9,0	;volatile
  1142  0097                     i1l965:
  1143                           
  1144                           ;lab8.c: 73:     setup();
  1145  0097  0879               	movf	_CENTENA,w
  1146  0098  3E2B               	addlw	(low (_DISPLAY| 0))& (0+255)
  1147  0099  0084               	movwf	4
  1148  009A  1383               	bcf	3,7	;select IRP bank0
  1149  009B  0800               	movf	0,w
  1150  009C  0087               	movwf	7	;volatile
  1151  009D                     i1l967:
  1152                           
  1153                           ;lab8.c: 74: 
  1154  009D  3001               	movlw	1
  1155  009E  00F5               	movwf	_MULTIPLEXADO
  1156  009F  3000               	movlw	0
  1157  00A0  00F6               	movwf	_MULTIPLEXADO+1
  1158  00A1                     i1l969:
  1159                           
  1160                           ;lab8.c: 77:         ADCON0bits.GO = 1;
  1161  00A1  0375               	decf	_MULTIPLEXADO,w
  1162  00A2  0476               	iorwf	_MULTIPLEXADO+1,w
  1163  00A3  1D03               	btfss	3,2
  1164  00A4  28A6               	goto	u45_21
  1165  00A5  28A7               	goto	u45_20
  1166  00A6                     u45_21:
  1167  00A6  28B2               	goto	i1l977
  1168  00A7                     u45_20:
  1169  00A7                     i1l971:
  1170                           
  1171                           ;lab8.c: 78:         division();;lab8.c: 79:     }
  1172  00A7  1009               	bcf	9,0	;volatile
  1173                           
  1174                           ;lab8.c: 80: }
  1175  00A8  1489               	bsf	9,1	;volatile
  1176  00A9                     i1l973:
  1177                           
  1178                           ;lab8.c: 81: 
  1179  00A9  0836               	movf	_DECENA,w
  1180  00AA  3E2B               	addlw	(low (_DISPLAY| 0))& (0+255)
  1181  00AB  0084               	movwf	4
  1182  00AC  0800               	movf	0,w
  1183  00AD  0087               	movwf	7	;volatile
  1184  00AE                     i1l975:
  1185                           
  1186                           ;lab8.c: 82: 
  1187  00AE  3002               	movlw	2
  1188  00AF  00F5               	movwf	_MULTIPLEXADO
  1189  00B0  3000               	movlw	0
  1190  00B1  00F6               	movwf	_MULTIPLEXADO+1
  1191  00B2                     i1l977:
  1192                           
  1193                           ;lab8.c: 84: void setup(void){
  1194  00B2  3002               	movlw	2
  1195  00B3  0675               	xorwf	_MULTIPLEXADO,w
  1196  00B4  0476               	iorwf	_MULTIPLEXADO+1,w
  1197  00B5  1D03               	btfss	3,2
  1198  00B6  28B8               	goto	u46_21
  1199  00B7  28B9               	goto	u46_20
  1200  00B8                     u46_21:
  1201  00B8  28C2               	goto	i1l985
  1202  00B9                     u46_20:
  1203  00B9                     i1l979:
  1204                           
  1205                           ;lab8.c: 85: ;lab8.c: 86:     ANSEL = 0b00000011;
  1206  00B9  1089               	bcf	9,1	;volatile
  1207                           
  1208                           ;lab8.c: 87:     ANSELH = 0X00;
  1209  00BA  1509               	bsf	9,2	;volatile
  1210  00BB                     i1l981:
  1211                           
  1212                           ;lab8.c: 88: 
  1213  00BB  0835               	movf	_UNIDAD,w
  1214  00BC  3E2B               	addlw	(low (_DISPLAY| 0))& (0+255)
  1215  00BD  0084               	movwf	4
  1216  00BE  0800               	movf	0,w
  1217  00BF  0087               	movwf	7	;volatile
  1218  00C0                     i1l983:
  1219                           
  1220                           ;lab8.c: 89:     TRISB = 0X00;
  1221  00C0  01F5               	clrf	_MULTIPLEXADO
  1222  00C1  01F6               	clrf	_MULTIPLEXADO+1
  1223  00C2                     i1l985:
  1224                           
  1225                           ;lab8.c: 91:     TRISE = 0X00;
  1226  00C2  110B               	bcf	11,2	;volatile
  1227  00C3                     i1l987:
  1228                           
  1229                           ;lab8.c: 92:     TRISAbits.TRISA0 = 1;
  1230  00C3  30FF               	movlw	255
  1231  00C4  0081               	movwf	1	;volatile
  1232  00C5                     i1l989:
  1233                           
  1234                           ;lab8.c: 95:     PORTA = 0X00;
  1235  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1236  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1237  00C7  1F0C               	btfss	12,6	;volatile
  1238  00C8  28CA               	goto	u47_21
  1239  00C9  28CB               	goto	u47_20
  1240  00CA                     u47_21:
  1241  00CA  28E9               	goto	i1l73
  1242  00CB                     u47_20:
  1243  00CB                     i1l991:
  1244                           
  1245                           ;lab8.c: 96:     PORTC = 0X00;;lab8.c: 97:     PORTB = 0X00;
  1246  00CB  0C1F               	rrf	31,w	;volatile
  1247  00CC  00F0               	movwf	??_isr
  1248  00CD  0C70               	rrf	??_isr,w
  1249  00CE  390F               	andlw	15
  1250  00CF  3A01               	xorlw	1
  1251  00D0  1D03               	skipz
  1252  00D1  28D3               	goto	u48_21
  1253  00D2  28D4               	goto	u48_20
  1254  00D3                     u48_21:
  1255  00D3  28DB               	goto	i1l997
  1256  00D4                     u48_20:
  1257  00D4                     i1l993:
  1258                           
  1259                           ;lab8.c: 98:     PORTE = 0X00;;lab8.c: 99: 
  1260  00D4  30C3               	movlw	-61
  1261  00D5  059F               	andwf	31,f	;volatile
  1262  00D6                     i1l995:
  1263                           
  1264                           ;lab8.c: 100: 
  1265  00D6  081E               	movf	30,w	;volatile
  1266  00D7  00F0               	movwf	??_isr
  1267  00D8  0870               	movf	??_isr,w
  1268  00D9  00F7               	movwf	_GUARDADO
  1269                           
  1270                           ;lab8.c: 101:     OSCCONbits.IRCF2 = 0;
  1271  00DA  28E1               	goto	i1l1001
  1272  00DB                     i1l997:
  1273                           
  1274                           ;lab8.c: 103:     OSCCONbits.IRCF0 = 0;
  1275  00DB  081F               	movf	31,w	;volatile
  1276  00DC  39C3               	andlw	-61
  1277  00DD  3804               	iorlw	4
  1278  00DE  009F               	movwf	31	;volatile
  1279  00DF                     i1l999:
  1280                           
  1281                           ;lab8.c: 104:     OSCCONbits.SCS = 1;
  1282  00DF  081E               	movf	30,w	;volatile
  1283  00E0  0086               	movwf	6	;volatile
  1284  00E1                     i1l1001:
  1285                           
  1286                           ;lab8.c: 106: 
  1287  00E1  3010               	movlw	16
  1288  00E2  00F0               	movwf	??_isr
  1289  00E3                     u68_27:
  1290  00E3  0BF0               	decfsz	??_isr,f
  1291  00E4  28E3               	goto	u68_27
  1292  00E5  0000               	nop
  1293  00E6                     i1l1003:
  1294                           
  1295                           ;lab8.c: 107:     OPTION_REGbits.T0CS = 0;
  1296  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  1297  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  1298  00E8  130C               	bcf	12,6	;volatile
  1299  00E9                     i1l73:
  1300  00E9  0873               	movf	??_isr+3,w
  1301  00EA  008A               	movwf	10
  1302  00EB  0872               	movf	??_isr+2,w
  1303  00EC  0084               	movwf	4
  1304  00ED  0E71               	swapf	??_isr+1,w
  1305  00EE  0083               	movwf	3
  1306  00EF  0EFE               	swapf	btemp,f
  1307  00F0  0E7E               	swapf	btemp,w
  1308  00F1  0009               	retfie
  1309  00F2                     __end_of_isr:
  1310  007E                     btemp	set	126	;btemp
  1311  007E                     wtemp0	set	126
  1312                           
  1313                           	psect	intentry
  1314  0004                     __pintentry:	
  1315                           ;incstack = 0
  1316                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1317                           
  1318  0004                     interrupt_function:
  1319  007E                     saved_w	set	btemp
  1320  0004  00FE               	movwf	btemp
  1321  0005  0E03               	swapf	3,w
  1322  0006  00F1               	movwf	??_isr+1
  1323  0007  0804               	movf	4,w
  1324  0008  00F2               	movwf	??_isr+2
  1325  0009  080A               	movf	10,w
  1326  000A  00F3               	movwf	??_isr+3
  1327  000B  120A  118A  288F   	ljmp	_isr
  1328                           
  1329                           	psect	config
  1330                           
  1331                           ;Config register CONFIG1 @ 0x2007
  1332                           ;	Oscillator Selection bits
  1333                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1334                           ;	Watchdog Timer Enable bit
  1335                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1336                           ;	Power-up Timer Enable bit
  1337                           ;	PWRTE = OFF, PWRT disabled
  1338                           ;	RE3/MCLR pin function select bit
  1339                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1340                           ;	Code Protection bit
  1341                           ;	CP = OFF, Program memory code protection is disabled
  1342                           ;	Data Code Protection bit
  1343                           ;	CPD = OFF, Data memory code protection is disabled
  1344                           ;	Brown Out Reset Selection bits
  1345                           ;	BOREN = OFF, BOR disabled
  1346                           ;	Internal External Switchover bit
  1347                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1348                           ;	Fail-Safe Clock Monitor Enabled bit
  1349                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1350                           ;	Low Voltage Programming Enable bit
  1351                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1352                           ;	In-Circuit Debugger Mode bit
  1353                           ;	DEBUG = 0x1, unprogrammed default
  1354  2007                     	org	8199
  1355  2007  20D4               	dw	8404
  1356                           
  1357                           ;Config register CONFIG2 @ 0x2008
  1358                           ;	Brown-out Reset Selection bit
  1359                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1360                           ;	Flash Program Memory Self Write Enable bits
  1361                           ;	WRT = OFF, Write protection off
  1362  2008                     	org	8200
  1363  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         3
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     11      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1598
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      5       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Apr 20 11:59:42 2021

                      pc 0002                       l84 01DB                       l87 014C  
           ___awdiv@sign 0025                       fsr 0004                      l326 008E  
                    l339 01A7                      l801 01C5                      l811 01CF  
                    l803 01C9                      l821 01D8                      l813 01D0  
                    l805 01CA                      l823 01D9                      l815 01D1  
                    l807 01CB                      l825 01DA                      l817 01D2  
                    l809 01CC                      l761 01A8                      l819 01D5  
                    l771 01B2                      l763 01AC                      l781 01B9  
                    l773 01B3                      l765 01AD                      l791 01C0  
                    l783 01BA                      l775 01B4                      l767 01B0  
                    l793 01C1                      l785 01BD                      l777 01B7  
                    l769 01B1                      l795 01C2                      l787 01BE  
                    l779 01B8                      l797 01C3                      l789 01BF  
                    l799 01C4                      u500 0038                      u501 0037  
                    u510 0049                      u511 0048                      u600 015F  
                    u601 015E                      u530 005B                      u610 016A  
                    u531 005A                      u611 0169                      u525 004D  
                    u550 006C                      u630 017C                      u551 006B  
                    u631 017B                      u640 0186                      u545 005C  
                    u641 0185                      u625 016E                      u570 0080  
                    u490 002D                      u571 007F                      u555 0068  
                    u491 002C                      u580 0085                      u660 0199  
                    u581 0084                      u565 0074                      u661 0198  
                    u645 0182                      u670 019E                      u590 0154  
                    u671 019D                      u655 018D                      u591 0153  
                    _isr 008F                      fsr0 0004                      indf 0000  
           ___awmod@sign 0025                     l1011 0029                     l1021 003D  
                   l1013 002D                     l1031 0053                     l1023 0041  
                   l1015 0032                     l1041 0073                     l1033 0057  
                   l1025 0043                     l1017 0034                     l1009 0026  
                   l1043 007A                     l1035 005B                     l1027 0049  
                   l1019 0038                     l1037 006C                     l1029 004C  
                   l1045 0080                     l1061 015B                     l1053 014D  
                   l1047 0085                     l1039 0072                     l1071 0174  
                   l1063 015F                     l1055 0150                     l1049 008A  
                   l1081 0193                     l1073 0178                     l1065 0164  
                   l1057 0154                     l1075 017C                     l1067 016A  
                   l1083 0199                     l1059 0159                     l1091 00F2  
                   l1085 019E                     l1077 0186                     l1069 016D  
                   l1093 01EF                     l1087 01A3                     l1079 018C  
                   l1095 01F4                     ?_isr 0070                     _T0IF 005A  
                   i1l73 00E9                     _TMR0 0001                     _main 01EF  
                   btemp 007E                     start 000E                    ??_isr 0070  
                  ?_main 0070          __end_of___awdiv 008F          __end_of___awmod 01A8  
                  _ANSEL 0188          ___awdiv@divisor 0020                    i1l961 008F  
                  i1l971 00A7                    i1l963 0093                    i1l981 00BB  
                  i1l973 00A9                    i1l965 0097                    i1l991 00CB  
                  i1l983 00C0                    i1l975 00AE                    i1l967 009D  
                  i1l993 00D4                    i1l985 00C2                    i1l977 00B2  
                  i1l969 00A1                    i1l995 00D6                    i1l987 00C3  
                  i1l979 00B9                    i1l997 00DB                    i1l989 00C5  
                  i1l999 00DF          ___awdiv@counter 0024                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTE 0009  
                  u44_20 0093                    u44_21 0092                    u45_20 00A7  
                  u45_21 00A6                    u46_20 00B9                    u46_21 00B8  
                  u47_20 00CB                    u47_21 00CA                    u48_20 00D4  
                  u48_21 00D3                    _TRISB 0086                    _TRISC 0087  
                  _TRISE 0089                    u68_27 00E3                    _setup 01A8  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 0200                   ??_main 0075  
                 _DECENA 0036                   _ADRESH 001E         ___awdiv@dividend 0022  
                 ?_setup 0070                   _ANSELH 0189                   i1l1001 00E1  
                 i1l1003 00E6                   _UNIDAD 0035         __end_of_division 014D  
              ??___awdiv 0074                ??___awmod 0074         ___awdiv@quotient 0026  
        ___awmod@divisor 0020          ___awmod@counter 0024                   saved_w 007E  
__end_of__initialization 0022           __pcstackCOMMON 0070             __pidataBANK0 0200  
          __end_of_setup 01DC           _OPTION_REGbits 0081                  ??_setup 0074  
             __pnvCOMMON 0078               __pmaintext 01EF               __pintentry 0004  
                _CENTENA 0079                  _DISPLAY 002B                  _RESIDUO 0078  
              ?_division 0070                  ___awdiv 0026                  ___awmod 014D  
                __ptext1 01A8                  __ptext2 00F2                  __ptext3 014D  
                __ptext4 0026                  __ptext5 008F             __size_of_isr 0063  
       ___awmod@dividend 0022     end_of_initialization 0022               ??_division 0028  
              _PORTEbits 0009                _TRISAbits 0085      start_initialization 0011  
            __end_of_isr 00F2               init_fetch0 01DC              __pdataBANK0 002B  
            __pbssCOMMON 0075                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_division 005B                __pnvBANK0 0035                 ?___awdiv 0020  
               ?___awmod 0020           __size_of_setup 0034                 _GUARDADO 0077  
      interrupt_function 0004                 _PIE1bits 008C                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F             _MULTIPLEXADO 0075  
       __size_of___awdiv 0069         __size_of___awmod 005B                 _division 00F2  
          __size_of_main 0011               _INTCONbits 000B                 init_ram0 01E0  
               intlevel1 0000               _OSCCONbits 008F  
